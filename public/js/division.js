/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/division.js":
/*!**********************************!*\
  !*** ./resources/js/division.js ***!
  \**********************************/
/***/ (() => {

eval("var table;\nvar initTable = function initTable() {\n  var createRoute = app_url + '/master/division/create';\n  table = $('#table-division').DataTable({\n    processing: true,\n    serverSide: true,\n    responsive: true,\n    scrollX: true,\n    ajax: {\n      url: app_url + '/master/division/ajax'\n    },\n    dom: 'Bfrtip',\n    buttons: [{\n      text: i18n.global.create,\n      className: 'btn bg-primary btn-sm btn-create-unit',\n      action: function action(e, dt, node, config) {\n        openGlobalModal(createRoute, i18n.global.create + ' ' + i18n.global.unit, {\n          footer: true,\n          target: \"target-division-action\"\n        });\n      }\n    }],\n    columns: [{\n      data: 'key',\n      render: function render(data, type, row, meta) {\n        return meta.row + meta.settings._iDisplayStart + 1;\n      },\n      width: '5%',\n      className: 'text-center'\n    }, {\n      data: 'name',\n      name: 'name'\n    }, {\n      data: 'action',\n      name: 'action',\n      className: 'text-center',\n      orderable: false,\n      width: '10%'\n    }],\n    order: [[1, 'desc']]\n  });\n};\nvar saveData = function saveData() {\n  var form = $('#form-units').serialize();\n  $.ajax({\n    type: \"POST\",\n    url: app_url + '/master/division',\n    data: form,\n    beforeSend: function beforeSend() {\n      findFormElement($('#form-units'));\n      toggleLoading(true);\n    },\n    success: function success(res) {\n      toggleLoading(false);\n      handleSuccess(res.message);\n      closeGlobalModal();\n      table.ajax.reload();\n    },\n    error: function error(err) {\n      toggleLoading(false);\n      handleError(err, 'form-units');\n    }\n  });\n};\nvar updateData = function updateData(id) {\n  var form = $('#form-units').serialize();\n  $.ajax({\n    type: \"PUT\",\n    url: app_url + '/master/division/' + id,\n    data: form,\n    beforeSend: function beforeSend() {\n      findFormElement($('#form-units'));\n      toggleLoading(true);\n    },\n    success: function success(res) {\n      toggleLoading(false);\n      handleSuccess(res.message);\n      closeGlobalModal();\n      table.ajax.reload();\n    },\n    error: function error(err) {\n      toggleLoading(false);\n      handleError(err, 'form-units');\n    }\n  });\n};\nvar confirmDelete = function confirmDelete(id) {\n  Confirm.show(i18n.global.delete_item, i18n.global.delete_item_confirmation, i18n.global.yes, i18n.global.no, function () {\n    deleteItem(id);\n  });\n};\nvar deleteItem = function deleteItem(id) {\n  return [$.ajax({\n    type: \"DELETE\",\n    url: app_url + '/master/division/' + id,\n    beforeSend: function beforeSend() {\n      toggleLoading(true);\n    },\n    success: function success(res) {\n      toggleLoading(false);\n      handleSuccess(res.message);\n      table.ajax.reload();\n    },\n    error: function error(err) {\n      toggleLoading(false);\n      handleError(err, 'form-units');\n    }\n  })];\n};\nwindow.initTable = initTable;\nwindow.table = table;\nwindow.saveData = saveData;\nwindow.updateData = updateData;\nwindow.confirmDelete = confirmDelete;\ninitTable();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/division.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/division.js"]();
/******/ 	
/******/ })()
;